continue
exit
clear
continue
ret.class
ret
exit
data.class
data
exit
data.class
data
continue
data
continue
data
continue
exit
data.id
data
exit
@user_restaurants.to_a
@user_restaurant.each do |value| puts value end
@user_restaurant.each do |value| puts value
@user_restaurant.each do |value|
clear
@user_restaurant['id']
@user_restaurant[:id]
@user_restaurant[id]
@user_restaurant.id
p data
@user_restaurants
data
exit
@user_restaurants
@counter
exit
@user_restaurants
@counter
exit
counter
continue
counter
@user_restaurants
exit
new_restaurants
exit
@user_restaurants
continue
@user_restaurants
exit
@user_restaurants
exit
@user_restaurants[0]
@user_restaurants.name
@user_restaurants['price']
@user_restaurants.price
@user_restaurants.name
@user_restaurants
exit
new_restaurant
continue
new_restaurants
exit
restaurants
exit
new_restaurants
continue
exit
new_restaurants.restaurant_input
restaurant_input
new_restaurants.input_restaurant
new_restaurants
new_restaurant
continue
exit
arr
exit
ret
exit
@new_restaurants
exit
@new_restaurants
continue
@restaurant_api
@new_restaurants
exit
clear
@new_restaurant
@rand
exit
@restaurant_api.generate_restaurant
@restaurant_api
exit
clear
puts @restaurant
p @restaurant
@restaurant
exit
pp ret
ret
exit
arr.restaurants
arr.restaurant
arr
@restaurants
exit
arr
exit
arr.length
exit
response
exit
end
exit
@sorted.restaurants[0]
@sorted.restaurants
@sorted.restaurants.name
@sorted.restaurants.rating
@sorted.restaurant.rating
@sorted.name
@sorted.rating
@sorted
rating
exit
next
exit
Menu.choice
@choice
next
exit
sorted_price
exit
exti
@count
@counter
exit
final
exit
sorted_price
exit
price
exit
id[0] = 1
id[0] == 1
id[0]
price[0]
price
exit
price
exit
price
exit
price.restaurants.sort_by(&:price)
price.restaurants.class
price.restaurants
price.class
price.sort_by(&:price)
price
exit
rand.sort_by(&:price)
rand
exit
response.sort_by
response.sort_by("price")
response
exit
rand
exit
pp response
response
exit
value.class
hash["id"]
hash["id]
hash["id"]=value.id
hash[id]=value.id
hash = {}
value.id
value
quit
exit
rand
quit
ret
ret.name
ret.restaurant.name
ret.restaurantapi
ret.restaurants
ret[0]
ret
exit
ret
exit
ret
quit
clear
asd
/
aq
exit
response
exit
ret
exit
ret
exit
arr
exit
price
quit
price.to_a
price
quit
new_arr.sort
new_arr
new_arr[0][0] = 101
new.arr[0][0] = 101
new_arr.sort
new_arr[0][2]
new_arr[0][2\]
new_arr[0][3]
new_arr
exit
clear
(price.restaurants).sort
price.restaurants.sort
price.restaurants
price.price
price
exit
price[0]
price
exit
price
exit
price.class
price
exit
@restaurants.class
@restaurants
rand.class
rand
next
exit
price.each do |value| {puts value}
price.to_a
price.class
price
exit
price
price.price
pp price
@sorted
price.class
price
