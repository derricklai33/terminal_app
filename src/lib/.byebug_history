exit
ret
exit
ret[0].class
ret
ret[1][:name]
ret[1].name
ret[1]
ret[0]
ret.class
ret
exit
ret
exit
clear
value[:name]
value[0]
value.nil?
value
continue
ret
continue
ret
exit
ret
exit
ret.delete_if(&:name == nil)
ret
exit
continue
ret
continue
ret
continue
ret
continue
ret
exit
ret.each {|value|  value.name.delete(nil)}
ret.each {|value|  value.name.delete_if(nil)}
ret.each {|value| puts value.name}
ret.each do {|value| puts value.name}
ret[0].name
ret.name
ret.delete_if)
ret.each {|value| value.each {|input| puts input}}
ret[1]
ret[0]
ret
ret.each {|value| puts value}
ret.class
ret
exit
ret.delete_if {|hash| hash['name'] = nil}exit
ret.delete_if {|hash| hash['name'] = nil}
ret.delete_if {|hash| hash[:name] = nil}
ret
exit
clear
ret.each do |value| {value.each do |values| {values.delete_if(nil)}}
ret.each do |value|
ret[3]
ret[2]
ret[1]
ret[3]
ret
continue
ret)
ret.delete_if(&:name = nil)
ret
ret[2]
ret[1]
ret[0]
ret
continue
ret
continue
ret
continue
ret
exit
data
exit
value
continue
inputs
exit
new_restaurants
continue
exit
clear
continue
ret.class
ret
exit
data.class
data
exit
data.class
data
continue
data
continue
data
continue
exit
data.id
data
exit
@user_restaurants.to_a
@user_restaurant.each do |value| puts value end
@user_restaurant.each do |value| puts value
@user_restaurant.each do |value|
clear
@user_restaurant['id']
@user_restaurant[:id]
@user_restaurant[id]
@user_restaurant.id
p data
@user_restaurants
data
exit
@user_restaurants
@counter
exit
@user_restaurants
@counter
exit
counter
continue
counter
@user_restaurants
exit
new_restaurants
exit
@user_restaurants
continue
@user_restaurants
exit
@user_restaurants
exit
@user_restaurants[0]
@user_restaurants.name
@user_restaurants['price']
@user_restaurants.price
@user_restaurants.name
@user_restaurants
exit
new_restaurant
continue
new_restaurants
exit
restaurants
exit
new_restaurants
continue
exit
new_restaurants.restaurant_input
restaurant_input
new_restaurants.input_restaurant
new_restaurants
new_restaurant
continue
exit
arr
exit
ret
exit
@new_restaurants
exit
@new_restaurants
continue
@restaurant_api
@new_restaurants
exit
clear
@new_restaurant
@rand
exit
@restaurant_api.generate_restaurant
@restaurant_api
exit
clear
puts @restaurant
p @restaurant
@restaurant
exit
pp ret
ret
exit
arr.restaurants
arr.restaurant
arr
@restaurants
exit
arr
exit
arr.length
exit
response
exit
end
exit
@sorted.restaurants[0]
@sorted.restaurants
@sorted.restaurants.name
@sorted.restaurants.rating
@sorted.restaurant.rating
@sorted.name
@sorted.rating
@sorted
rating
exit
next
exit
Menu.choice
@choice
next
exit
sorted_price
exit
exti
@count
@counter
exit
final
exit
sorted_price
exit
price
exit
id[0] = 1
id[0] == 1
id[0]
price[0]
price
exit
price
exit
price
exit
price.restaurants.sort_by(&:price)
price.restaurants.class
price.restaurants
price.class
price.sort_by(&:price)
price
exit
rand.sort_by(&:price)
rand
exit
response.sort_by
response.sort_by("price")
response
exit
rand
